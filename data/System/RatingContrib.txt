---+!! !RatingContrib
<!--
One line description, required for extensions repository catalog.
   * Set SHORTDESCRIPTION = Rating widget for forms
-->
%SHORTDESCRIPTION%

%TOC%

This is a rating widget that can support a "line of stars" style input field.

---++ Usage
You can use the new =rating= type in form fields. The result of the rating is captured as an integer, and displayed as a line of stars. For example,

<img src="%ATTACHURLPATH%/example_stars.gif" />

Install the contrib. You can immediately use the =rating= type in your forms. Rating values are stored as integers.

To use it in a form, use the type =rating=, with the optional modified =+small= for small stars. The size field dictates how wide the rating is e.g. 5 means a 5 star range. The value field specifies the initial value. For example, the form definition:

<verbatim>
| *Name*     | *Type*       | *Size* | *Values* |
| Supplier   | text         | 40     |          |
| Quality    | rating+small | 10     | 5        |
| Order Date | date         |        |          |
</verbatim>
looks like this when it is edited:

<img src="%ATTACHURLPATH%/edit_example.gif" />

---++ Installation Instructions

%$INSTALL_INSTRUCTIONS%

---++ Using the Contrib in a Plugin
A typical application of this widget is its use to capture a rating
under the control of a plugin. It is straightforward to use in this role.
The API to the contrib is:

=Foswiki::Contrib::RatingContrib::renderRating($name, $size, $small, $value, $input_attrs) -> $html=

where
   * =$name= is the name you want to give to the =input= element that will get the rating value
   * =$size= is the total width of the rating bar, typically 5 or 10
   * =$small= is a boolean; if true, use small (10px) stars in place of the default (25px) stars
   * =$value= is the current value of the rating. This may be a floating-point value, but should be in the range =0..$size=
   * =$input_attrs= is a hash that contains additional attributes to be assigned to the =input= element used to capture the rating value. Typically the only attribute callers will need to use is =onchange=, which should be set to a callback that will be invoked when the value in the =input= is changed. If you pass =undef= for this parameter, then the line of stars will be "read only".
The contrib will automatically look after the CSS and Javascript it needs to load to work.

For example, let's say we want to generate a conventional form that contains a line of stars prompt. We want the value of the rating bar to be submitted along with everything else in the form.
<verbatim>
my $html =
   CGI::form({action="some url", method=>"post"},
       Foswiki::Contrib::RatingContrib::renderRating('rating', 5, 0, 0, {})
      .CGI::submit("OK"));
</verbatim>

Say instead that we want to generate an alert when a line of stars has its
value changed:
<verbatim>
$html = Foswiki::Contrib::RatingContrib::renderRating('rating', 5, 0, 0,
        {onchange=>'javascript: alert("Rated")'})
</verbatim>
Of course, when you use the =onchange= event, you don't need a form. This model
is good if you want (for example) to update values using a REST handler.

---++ Contrib Info

|  Author(s): | Crawford Currie http://c-dot.co.uk |
|  Copyright: | &copy; 2007 C-Dot Consultants |
|  License: | [[http://www.gnu.org/licenses/gpl.html][GPL (Gnu General Public License)]] |
|  Version: | %$VERSION% |
|  Change History: | <!-- versions below in reverse order -->&nbsp; |
|  10 Jun 2009: | Foswikitask:1258: port to Foswiki |
|  27 Jun 2006: | First version |
|  Dependencies: | %$DEPENDENCIES% |
|  Home: | http://foswiki.org/Extensions/RatingContrib |
|  Support: | http://foswiki.org/Support/RatingContrib |

__Related Topics:__ [[%SYSTEMWEB%.Contribs][Contribs]], %SYSTEMWEB%.DeveloperDocumentationCategory, %SYSTEMWEB%.AdminDocumentationCategory, %SYSTEMWEB%.DefaultPreferences, %USERSWEB%.SitePreferences

<!-- Do _not_ attempt to edit this topic; it is auto-generated. -->
